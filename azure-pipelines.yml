# Build and test every branch
# Pack nupkg for every successful build, except pull requests and tags, push to Azure Artifacts
# Pack nupkg for tags, with the name of the tag, push to NuGet

trigger:
  branches:
    include:
    - "*"
  tags:
    include:
    - "*"

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  Configuration: Release
  Version: 0.0.0-unknown

name: unknown

steps:
- task: PowerShell@2
  displayName: Set Version
  inputs:
    targetType: inline
    script: |
      $v = git describe
      Write-Host "##vso[task.setvariable variable=Version]$v"      

- task: PowerShell@2
  displayName: Set BuildNumber
  inputs:
    targetType: inline
    script: |
      $v = git describe
      Write-Host "##vso[build.updatebuildnumber]$v"  

- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: --configuration $(Configuration)

- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: test
    projects: '**/*.Test.csproj'
    arguments: --configuration $(Configuration)

- task: DotNetCoreCLI@2
  displayName: dotnet pack
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  inputs:
    command: pack
    packagesToPack: 'src/**/*.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: Version

#
# Azure Artifacts 
#

- task: DotNetCoreCLI@2
  displayName: dotnet push (Artifacts)
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  inputs:
    command: push
    publishVstsFeed: nupkg

#
# Github 
#

- task: NuGetCommand@2
  displayName: dotnet push (GitHub)
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: 'GitHub nuget registry'
    versioningScheme: byEnvVar
    versionEnvVar: Version

#
# NuGet.org
# 

- task: NuGetCommand@2
  displayName: nuget push (NuGet)
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: 'NuGet'
    versioningScheme: byEnvVar
    versionEnvVar: Version