# Build and test every branch
# Pack nupkg for every successful build, except pull requests and tags, push to Azure Artifacts
# Pack nupkg for tags, with the name of the tag, push to NuGet

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  BuildConfiguration: Release
  Major: '1'
  Minor: '0'
  Patch: '0'
  BuildRevision: $[counter('buildrevision', 100)]
  BuildVersion: $(Major).$(Minor).$(Patch).$(BuildRevision)-$(Build.SourceBranchName)

name: $(BuildRevision)-$(Build.SourceBranchName)

steps:
- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: --configuration $(BuildConfiguration)

- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: test
    projects: '**/*.Test.csproj'
    arguments: --configuration $(BuildConfiguration)

  #
  # CI 
  #
- task: DotNetCoreCLI@2
  displayName: dotnet pack (CI)
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')))
  inputs:
      command: pack
      packagesToPack: 'src/**/*.csproj'
      versioningScheme: byEnvVar
      versionEnvVar: BuildVersion

- task: DotNetCoreCLI@2
  displayName: dotnet push (CI)
  condition: and(succeeded(), or(ne(variables['Build.Reason'], 'PullRequest'), startsWith(variables['Build.SourceBranch'], 'refs/tags/')))
  inputs:
      command: push
      publishVstsFeed: nupkg

  #
  # Tag
  # 
#- task: DotNetCoreCLI@2
#  displayName: dotnet pack (Tag)
#  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
#  inputs:
#    command: pack
#    packagesToPack: 'src/**/*.csproj'
#    versioningScheme: byEnvVar
#    versionEnvVar: Build.SourceBranchName
#
#- task: DotNetCoreCLI@2
#  displayName: dotnet push (Tag)
#  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
#  inputs:
#    command: push
#    publishVstsFeed: nupkg
#    nuGetFeedType: external
#    publishFeedCredentials: 'NuGet'
#    versioningScheme: byEnvVar
#    versionEnvVar: Build.SourceBranchName